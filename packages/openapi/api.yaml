openapi: '3.1.0'
info:
  title: MyClinic API
  version: '1.0'
paths:
  /api/get-patient:
    get:
      description: 患者番号をもとに患者情報を返す
      parameters:
        - in: query
          description: 患者番号
          name: patient-id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
  /api/save-patient-image:
    post:
      description: 患者画像をアップロードする
      parameters: 
        - in: query
          name: patient-id
          schema:
            type: integer
          required: true
          description: 患者番号
          example: 1234
        - in: query
          name: file-name
          schema:
            type: string
          required: true
          description: アップロード後のファイル名
          example: 1234-hokensho-20230211220932-01.jpg
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: 画像データ
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                description: 成功（true）、失敗（false）
  /api/patient-image:
    get:
      description: 患者画像をダウンロードする
      parameters:
        - in: query
          name: patient-id
          schema:
            type: integer
          required: true
          description: 患者番号
          example: 1234
        - in: query
          name: file-name
          schema:
            type: string
          required: true
          description: アップロード後のファイル名
          example: 1234-hokensho-20230211220932-01.jpg
      responses:
        '200':
          description: Success
          content:
            image/*:
              schema:
                type: string
                format: binary
                description: 画像データ
  /api/delete-patient-image:
    get:
      description: 患者画像を削除する
      parameters:
        - in: query
          name: patient-id
          schema:
            type: integer
          required: true
          description: 患者番号
          example: 1234
        - in: query
          name: file-name
          schema:
            type: string
          required: true
          description: アップロード後のファイル名
          example: 1234-hokensho-20230211220932-01.jpg
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                description: 成功（true）、失敗（false）
  /api/fill-appoint-times:
    get:
      description: 新規に予約枠を作成する
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date
          required: true
          description: この日から
          example: "2023-02-12"
        - in: query
          name: upto
          schema:
            type: string
            format: date
          required: true
          description: この日まで
          example: "2023-02-18"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
                description: 成功（true）、失敗（false）
  /api/get-appoint-time:
    get:
      description: 予約枠を返す
      parameters:
        - in: query
          name: appoint-time-id
          schema:
            type: integer
          required: true
          description: 予約枠ＩＤ
          example: 1234
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointTime'
  /api/register-appoint:
    post:
      description: 診察予約を登録する
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appoint'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appoint'

components:
  schemas:
    Patient:
      description: 患者情報
      type: object
      properties:
        patientId:
          description: 患者番号
          type: integer
          example: 1234
        lastName:
          type: string
          example: 診療
        firstName:
          type: string
          example: 太郎
        lastNameYomi:
          type: string
          example: しんりょう
        firstNameYomi:
          type: string
          example: たろう
        sex:
          type: string
          enum: [M, F]
          example: M
        birthday:
          type: string
          format: date
        address:
          type: string
          example: 東京都
        phone:
          type: string
          example: 03-1234-5678
    AppointTime:
      description: 診察予約枠
      properties:
        appointTimeId:
          type: integer
          example: 1234
          description: 予約枠ＩＤ
        date:
          type: string
          format: date
          example: 2023-02-13
          description: 予約日
        fromTime:
          type: string
          format: time
          example: 10:00:00
          description: 予約開始時間
        untilTime:
          type: string
          format: time
          example: 10:20:00
          description: 予約終了時間
        kind:
          type: string
          example: regular
          description: 予約の種類
        capacity:
          type: integer
          example: 1
          description: 予約可能人数
    Appoint:
      description: 診察予約
      properties:
        appointId:
          type: integer
          example: 3234
          description: 診察予約ＩＤ
        appointTimeId:
          type: integer
          example: 1234
          description: 予約枠ＩＤ
        patientName:
          type: string
          example: 診療太郎
          description: 患者名
        patientId:
          type: integer
          example: 12
          description: 患者番号
        memo:
          type: string
          example: 血圧の相談 {{健診}}
          description: メモ
          summary: <
            形式は Memo1 {{Tag[, ...]}} Memo2
            Memo1 と Memo2 は自由な形式のメモ。Tag は ',' （あるいは '、'）で区切られたタグ名
            タグ名は Memo1 及び Memo2 とは別に予約枠で表示される。


                  


