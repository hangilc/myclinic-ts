export const 診査支払い機関コード = {
  "社会保険診療報酬支払基金": 1,
  "国民健康保険団体連合会": 2,
};

export const 都道府県コード: Record<string, string> = {
  "北海道": "01",  
  "青森": "02",  
  "岩手": "03",  
  "宮城": "04",  
  "秋田": "05",  
  "山形": "06",  
  "福島": "07",  
  "茨木": "08",  
  "栃木": "09",  
  "群馬": "10",  
  "埼玉": "11",  
  "千葉": "12",  
  "東京": "13",  
  "神奈川": "14",  
  "新潟": "15",  
  "富山": "16",  
  "石川": "17",  
  "福井": "18",  
  "山梨": "19",  
  "長野": "20",  
  "岐阜": "21",  
  "静岡": "22",  
  "愛知": "23",  
  "三重": "24",  
  "滋賀": "25",  
  "京都": "26",  
  "大阪": "27",  
  "兵庫": "28",  
  "奈良": "29",  
  "和歌山": "30",  
  "鳥取": "31",  
  "島根": "32",  
  "岡山": "33",  
  "広島": "34",  
  "山口": "35",  
  "徳島": "36",  
  "香川": "37",  
  "愛媛": "38",  
  "高知": "39",  
  "福岡": "40",  
  "佐賀": "41",  
  "長崎": "42",  
  "熊本": "43",  
  "大分": "44",  
  "宮崎": "45",  
  "鹿児島": "46",  
  "沖縄": "47",  
}

export const KouhiOrder: number[] = [
  13, 14, 18, 29, 30, 10, 11, 20, 21, 15, 
  16, 24, 22, 28, 17, 79, 19, 23, 52, 54,
  51, 38, 53, 66, 62, 25, 12
];

export const KouhiOrderMap: Record<number, number> = calcKouhiOrderMap();

function calcKouhiOrderMap(): Record<number, number> {
  const map: Record<number, number> = {};
  KouhiOrder.forEach((k, i) => {
    map[k] = i+1;
  });
  return map;
}

export const RezeptShubetuCodeOffset = {
  "本人": 2,
  "未就学者": 4,
  "家族": 6,
  "高齢受給一般": 8,
  "高齢受給７割": 0,
} as const;

export const RezeptShubetsuCodeBase = {
  "社保国保単独": 1110,
  "社保国保・１公費併用": 1120,
  "社保国保・２公費併用": 1130,
  "社保国保・３公費併用": 1140,
  "社保国保・４公費併用": 1150,
  "公費単独": 1212,
  "２公費": 1222,
  "３公費": 1232,
  "４公費": 1242,
  "後期高齢単独": 1310,
  "後期高齢・１公費併用": 1320,
  "後期高齢・２公費併用": 1330,
  "後期高齢・３公費併用": 1340,
  "後期高齢・４公費併用": 1350,
} as const;

export const 男女区分コード = {
  "男": 1,
  "女": 2,
} as const;

export const レセプト特記事項コード = {
  "公": "01",
  "長": "02",
  "長処": "03",
  "後保": "04",
  "老併": "07",
  "老健": "08",
  "施": "09",
  "第三": "10",
  "薬治": "11",
  "器治": "12",
  "先進": "13",
  "制超": "14",
  "長２": "16",
  "上位": "17",
  "一般": "18",
  "低所": "19",
  "二割": "20",
  "高半": "21",
  "多上": "22",
  "出産": "25",
  "区ア": "26",
  "区イ": "27",
  "区ウ": "28",
  "区エ": "29",
  "区オ": "30",
  "多ア": "31",
  "多イ": "32",
  "多ウ": "33",
  "多エ": "34",
  "多オ": "35",
  "加治": "36",
  "申出": "37",
  "医併": "38",
  "医療": "39",
  "区カ": "41",
  "区キ": "42",
  "多カ": "43",
  "多キ": "44",
} as const;

type valueof<T> = T[keyof T];

export type レセプト特記事項コードName = keyof typeof レセプト特記事項コード;
export type レセプト特記事項コードCode = valueof<typeof レセプト特記事項コード>;

export function isレセプト特記事項コードName(k: string): k is レセプト特記事項コードName {
  return Object.keys(レセプト特記事項コード).includes(k);
}

